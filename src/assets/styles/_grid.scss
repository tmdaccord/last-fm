//  Grid System

$column-count: 12;
$column-width: 70px;
$gutter-width: 30px;

$row-ws: $gutter-width;

$container-xs: 300px;
$container-sm: 720px + $gutter-width;
$container-md: 940px + $gutter-width;
$container-lg: $column-count*$column-width + $gutter-width*($column-count);
$container-xl: 1460px + $gutter-width;

@mixin make-flex() {
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin flex($grow-shrink-basis) {
    -ms-flex: $grow-shrink-basis;
    -webkit-flex: $grow-shrink-basis;
    flex: $grow-shrink-basis;
}

@mixin flex-direction($direction) {
    -webkit-flex-direction: $direction;
    -ms-flex-direction: $direction;
    flex-direction: $direction;
}

@mixin flex-wrap($wrap) {
    -webkit-flex-wrap: $wrap;
    -ms-flex-wrap: $wrap;
    flex-wrap: $wrap;
}

@mixin flex-grow($grow) {
    -webkit-flex-grow: $grow;
    -ms-flex-positive: $grow;
    flex-grow: $grow;
}

@mixin flex-basis($basis) {
    -webkit-flex-basis: $basis;
    -ms-flex-preferred-size: $basis;
    flex-basis: $basis;
    max-width: $basis;
}

@mixin justify-content($align) {
    -webkit-justify-content: $align;
    @if ($align == "flex-start") {
        -ms-flex-pack: start;
    } @else if ($align == "flex-end") {
        -ms-flex-pack: end;
    } @else if ($align == "space-around") {
        -ms-flex-pack: distribute;
    } @else if ($align == "space-between") {
        -ms-flex-pack: justify;
    } @else {
        -ms-flex-pack: $align;
    }
    justify-content: $align;
}

@mixin align-content($align) {
    -webkit-align-content: $align;
    @if ($align == "flex-start") {
        -ms-flex-pack: start;
    } @else if ($align == "flex-end") {
        -ms-flex-pack: end;
    } @else if ($align == "space-around") {
        -ms-flex-pack: distribute;
    } @else if ($align == "space-between") {
        -ms-flex-pack: justify;
    } @else if ($align == "center") {
        -ms-flex-pack: center;
    } @else {
        -ms-flex-pack: $align;
    }
    align-content: $align;
}

@mixin align-items($valign) {
    -webkit-align-items: $valign;
    @if ($valign == "flex-start") {
        -ms-flex-align: start;
    } @else if ($valign == "flex-end") {
        -ms-flex-align: end;
    } @else {
        -ms-flex-align: $valign;
    }
    align-items: $valign;
}

@mixin align-self($valign) {
    -webkit-align-self: $valign;
    @if ($valign == "flex-start") {
        -ms-flex-item-align: start;
    } @else if ($valign == "flex-end") {
        -ms-flex-item-align: end;
    } @else {
        -ms-flex-item-align: $valign;
    }
    align-self: $valign;
}

@mixin order($order) {
    -webkit-order: $order;
    -ms-flex-order: $order;
    order: $order
}

@mixin make-container($gutter: 30px) {
    margin-right: auto;
    margin-left: auto;
    padding-left: ($gutter / 2);
    padding-right: ($gutter / 2);
}

@mixin make-row($gutter: 30px) {
    margin-left: ceil(($gutter / -2));
    margin-right: floor(($gutter / -2));
}

@mixin make-col($gutter: 30px) {
    padding-left: ceil(($gutter / 2));
    padding-right: floor(($gutter / 2));
}

@mixin make-grid($resolution, $count: 12) {
    .col-#{$resolution}-preffix-0 {
        margin-left: 0%;
    }

    @for $i from 1 through $count {
        @if ($i == 4) {
            .col-#{$resolution}-#{$i} {
                @include flex-basis(percentage($i / $count) + 0.00001%);
            }
        } @else {
            .col-#{$resolution}-#{$i} {
                @include flex-basis(percentage($i / $count));
            }
        }

        .col-#{$resolution}-preffix-#{$i} {
            margin-left: percentage($i / $count);
        }

        .col-#{$resolution}-push-#{$i} {
            @include order($i);
        }
    }
}

@mixin make-fallback($resolution, $count: 12) {
    @for $i from 1 through $count {
        .col-xs-#{$i} {
            margin-left: auto;
            margin-right: auto;
            max-width: percentage($i / $count);
        }
    }

    @for $i from 1 through $count {
        .col-sm-#{$i} {
            margin-left: auto;
            margin-right: auto;
            max-width: percentage($i / $count);
        }
    }

    @for $i from 1 through $count {
        .col-md-#{$i} {
            margin-left: auto;
            margin-right: auto;
            max-width: percentage($i / $count);
        }
    }

    @for $i from 1 through $count {
        .col-lg-#{$i} {
            margin-left: auto;
            margin-right: auto;
            max-width: percentage($i / $count);
        }
    }

    @for $i from 1 through $count {
        .col-xl-#{$i} {
            margin-left: auto;
            margin-right: auto;
            max-width: percentage($i / $count);
        }
    }
}

@mixin make-grid-system($resolution) {
    .row > {
        @include make-grid($resolution, $column-count);
    }
}


.container {
    @include make-container($gutter-width);
    min-width: $container-xs;
    max-width: $screen-xs-min;

    @media (min-width: $screen-sm-min) {
        max-width: $container-sm;
    }
    @media (min-width: $screen-md-min) {
        max-width: $container-md;
    }
    @media (min-width: $screen-lg-min) {
        max-width: $container-lg;
    }
    @media (min-width: $screen-xl-min) {
        max-width: $container-xl;
    }
}

.container-fluid {
    @include make-container($gutter-width * 2);
    max-width: 2048px;
}

.row {
    @include make-row($gutter-width);
}

[class*='col-'] {
    @include make-col($gutter-width);
}

* + [class*='col-'],
* + .row {
    margin-top: $row-ws;
}

.row-no-gutter {
    margin-left: 0;
    margin-right: 0;

    > [class*='col'] {
        padding-left: 0;
        padding-right: 0;
    }

    > * + [class*='col'] {
        margin-top: 0;
    }
}

@media (min-width: $screen-xs-min) {
    * + [class*='col-xs-'] {
        margin-top: 0;
    }

    .row {
        @include make-flex();
        @include flex(0 1 auto);
        @include flex-direction(row);
        @include flex-wrap(wrap);
    }

    .row > [class*='col'] {
        @include flex(0 0 auto);
        @include flex-basis(100%);
    }

    @include make-grid-system("xs");
}

@media (min-width: $screen-sm-min) {
    * + [class*='col-sm-'] {
        margin-top: 0;
    }

    @include make-grid-system("sm");
}

@media (min-width: $screen-md-min) {
    * + [class*='col-md-'] {
        margin-top: 0;
    }

    @include make-grid-system("md");
}

@media (min-width: $screen-lg-min) {
    * + [class*='col-lg-'] {
        margin-top: 0;
    }

    @include make-grid-system("lg");
}

@media (min-width: $screen-xl-min) {
    * + [class*='col-xl-'] {
        margin-top: 0;
    }

    @include make-grid-system("xl");
}
